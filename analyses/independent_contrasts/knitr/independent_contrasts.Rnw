\documentclass[11pt]{article}

%% This document source is based on the excellent:
%% http://www.math.smith.edu/~nhorton/sleuth/
%%
%% Specifically, 
%% http://www.math.smith.edu/~nhorton/sleuth/chapter02.Rnw

\usepackage{natbib}
\usepackage[margin=1in,bottom=.5in,includehead,includefoot]{geometry}
\usepackage{hyperref}
\usepackage{language}
\usepackage{alltt}
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}

%% Now begin customising things. See the fancyhdr docs for more info.

\chead{}
\lhead[\sf \thepage]{\sf \leftmark}
\rhead[\sf \leftmark]{\sf \thepage}
\lfoot{}
\cfoot{Independent contrasts}
\rfoot{}

\newcounter{myenumi}
\newcommand{\saveenumi}{\setcounter{myenumi}{\value{enumi}}}
\newcommand{\reuseenumi}{\setcounter{enumi}{\value{myenumi}}}

\pagestyle{fancy}

\def\R{{\sf R}}
\def\Rstudio{{\sf RStudio}}
\def\RStudio{{\sf RStudio}}
\def\term#1{\textbf{#1}}
\def\tab#1{{\sf #1}}


\usepackage{relsize}

\newlength{\tempfmlength}
\newsavebox{\fmbox}
\newenvironment{fmpage}[1]
     {
   \medskip
   \setlength{\tempfmlength}{#1}
   \begin{lrbox}{\fmbox}
     \begin{minipage}{#1}
     \vspace*{.02\tempfmlength}
		 \hfill
	   \begin{minipage}{.95 \tempfmlength}}
		 {\end{minipage}\hfill
		 \vspace*{.015\tempfmlength}
		 \end{minipage}\end{lrbox}\fbox{\usebox{\fmbox}}
	 \medskip
	 }


\newenvironment{boxedText}[1][.98\textwidth]%
{%
\begin{center}
\begin{fmpage}{#1}
}%
{%
\end{fmpage}
\end{center}
}

\newenvironment{boxedTable}[2][tbp]%
{%
\begin{table}[#1]
  \refstepcounter{table}
  \begin{center}
\begin{fmpage}{.98\textwidth}
  \begin{center}
	\sf \large Box~\expandafter\thetable. #2
\end{center}
\medskip
}%
{%
\end{fmpage}
\end{center}
\end{table}		% need to do something about exercises that follow boxedTable
}


\newcommand{\cran}{\href{http://www.R-project.org/}{CRAN}}

\title{Phylogenetic Independent Contrasts in R}

\author{
Casey Dunn}

\date{\today}

<<echo=FALSE>>=
options(width=70)
@



\begin{document}


\maketitle
\tableofcontents

%\parindent=0pt


\SweaveOpts{
  	dev="pdf",
	fig.path="figures/",
	prompt=FALSE,   
	comment="#"    # turn off commenting of ouput (but perhaps we should not do this either
	}

<<setup,echo=FALSE,message=FALSE>>=
showOriginal=FALSE
showNew=TRUE
@ 

\section{Introduction}

This example analysis presents the basics phylogenetic independent contrasts 
\citep{Felsenstein:1985ua}.
It expands on the example presented at the R phylogenetics wiki 
(\url{http://www.r-phylo.org/wiki/HowTo/Phylogenetic_Independent_Contrasts}).

This analysis uses the programming language R.
In the past decade, a large community of phylogenetic 
biologists interested in character evolution have written many analysis tools 
in R. This set of tools provides a rich environment for the study of character 
evolution. 


\section{Getting oriented with R}

R, like python and many other languages, can be used interactively, where you 
enter a few commands at a time, or in batch mode, where a series of commands are 
placed in a file and executed all at once. We will use R interactively, and 
load R code that others have already written for phylogenetic analyses as we 
go.

There are already \emph{many} general introductions, tutorials, and quick-references 
for R. I therefore won't provide a background on R itself, we will dive right 
into some analyses.

There is detailed information on phylogenetic analysis with R at both 
\href{http://www.r-phylo.org/wiki/Main_Page}{the R phylo wiki} and the 
\href{http://cran.r-project.org/web/views/Phylogenetics.html}{CRAN task page for phylogenetics}.

For the analyses below, you will need to install the `ape` library in R.


\section{Getting set up and loading the data}

Copy the data files (`Geospiza.txt` and `Geospiza.nex`) to a directory on your 
computer. Open the R interface (which was installed alongside the rest of the 
R components) or open a terminal window and launch an interactive R session 
with the command `R`.

Now, change to the directory where your data files are:

<<eval=FALSE>>=
setwd('DATADIR')
@


Where `DATADIR` is the directory where you put the data files. The R command 
`setwd()` is much like the shell command `cd` - it controls your working 
directory.

Load the ape library, which has the functions we will use for phylogenetic 
independent contrasts:

<<>>=
library(ape)
@

Load and prepare the data:

<<eval=FALSE>>=
geodata<-read.table("Geospiza.txt")
geotree<-read.nexus("Geospiza.nex")
@

<<echo=FALSE>>=
geodata <- read.table("../Geospiza.txt")
geotree <- read.nexus("../Geospiza.nex")
@

We now need to remove a taxon in the tree that isn't in the data file.

<<>>=
geotree <- drop.tip(geotree, "olivacea")
@
    
Plot the tree:

<<>>=
plot(geotree)
@


And take a look at the character data:

<<>>=
geodata
@

Data are available for five different characters for all the taxa in the tree.
We'll look at two of these characters, wing length and tarsus length. Extract 
these columns as their own variables to simplify later commands:

<<>>=
wingL <- geodata$wingL
tarsusL <- geodata$tarsusL
names(wingL) <- row.names(geodata)
names(tarsusL) <- row.names(geodata)
@

We can now plot these data directly onto the tips of the tree:

<<>>=
plot( geotree, label.offset = 0.04 )
tiplabels( round(wingL, 2) )
@

<<>>=
plot( geotree, label.offset = 0.04 )
tiplabels( round(tarsusL, 2) )
@


\section{Calculating independent contrasts}

Calcualte the independent contrasts for each of the variables:

<<>>=
ContrastwingL <- pic(wingL, geotree)
ContrasttarsusL <- pic(tarsusL, geotree)
@

And plot them on the tree:

<<>>=
plot (geotree)
nodelabels( round(ContrastwingL, 3), adj = c(0, -0.5), frame="n" )
nodelabels( round(ContrasttarsusL, 3), adj = c(0, 1), frame="n" )
@




\section{Investigating the relationships between the variables}

<<>>=
RegressTarsusWing <- lm( ContrastwingL~ContrasttarsusL -1 )
summary.lm( RegressTarsusWing )
@


<<>>=
plot( ContrastwingL, ContrasttarsusL )
abline( RegressTarsusWing )
@


\section{What if we didn't consider the phylogeny?}


<<>>=
RegressTarsusWingNaive <- lm( wingL~tarsusL )
summary.lm( RegressTarsusWingNaive )
@


<<>>=
plot( wingL, tarsusL )
@



\section{Understanding how the contrasts are calculated}

In the above code, the function pic() took care of all the steps needed to 
calculate independent contrasts. In this section, we walk through these steps 
one by one to illustrate each of them.

We'll use a smaller tree and dataset than above. The dataset is the example 
dataset that is provided with the pic() function.

The following commands load the data and tree:

<<>>=
tree.primates <- read.tree(text="((((Homo:0.21,Pongo:0.21):0.28,Macaca:0.49):0.13,Ateles:0.62):0.38,Galago:1.00);")

X <- c(4.09434, 3.61092, 2.37024, 2.02815, -1.46968)
Y <- c(4.74493, 3.33220, 3.36730, 2.89037, 2.30259)
names(X) <- names(Y) <- c("Homo", "Pongo", "Macaca", "Ateles", "Galago")
@


\subsection{Phylogenetic trees in R}

Before we get into the calculations themselves, let's lift up the hood on how 
the phylogenetic tree is stored. 
The phy tree object that is implemented in 
the ape library holds various data about these nodes and the edges (ie, 
braches) that connect them.

Take a look at the structure of our tree object.

<<>>=
str(tree.primates)
tree.primates$edge
tree.primates$edge.length
tree.primates$Nnode
tree.primates$tip.label 
@

The edge matrix describes how the edges connect the the nodes. It has one row 
per edge, and two columns. The first column gives the starting node of the edge, and the second 
column gives the ending node. The edge number is just the row 
number. 

The edge.length vector contains the lengths of each of the edges.

Nnode simply holds the number of internal nodes. tip.label gives the names 
of the external nodes (tips).

The primary take-home message is that each node has a number that refers to it. 
The observed data correspond to external nodes. Ancestral reconstructions 
and independent contrasts will correspond to internal nodes. In addition, each 
edge has a number that refers to it. We can use this number to look up the 
edge length.

You can plot the node numbers right onto the tree. ape handles tips and 
internal nodes a bit differently, so we will label them on the same tree with 
two separate commands:

<<>>=
plot( tree.primates, label.offset = 0.04 )
tiplabels( 1:5 )
nodelabels( 6:9 )
@

Similarly, you can plot the edge labels right onto the tree:

<<>>=
plot( tree.primates )
edgelabels( 1:8 )
@

And the branch lengths:

<<>>=
plot( tree.primates )
edgelabels( round(tree.primates$edge.length,2) )
@

\subsection{Adjusting the branch lengths}

The lengths of internal branches must be adjusted to reflect the increased 
variance associated with the inference of ancestral character states. Below, 
we create a copy of all the branch lengths and then correct the lengths of the 
three internal branches.

<<>>=
v <- tree.primates$edge.length

v[3] <- v[3] + ( v[4] * v[5] ) / ( v[4] + v[5] )
v[2] <- v[2] + ( v[3] * v[6] ) / ( v[3] + v[6] )
v[1] <- v[1] + ( v[7] * v[2] ) / ( v[7] + v[2] )

plot( tree.primates )
edgelabels( round(a,2) )
@

\subsection{Preparing the character data}

The internal character states are calculated as weighted averages of the 
states at the descendant nodes. This calculation is described by Equation 3 of 
\cite{Felsenstein:1985ua}. Since the ancestral character state of the root node 
isn't used in any contrast calculations, we won't worry about it.


<<>>=

aX.9 <- ( X[1]*(1/v[4]) + X[2]*(1/v[5]) ) / ( (1/v[4]) + (1/v[5]) )
aX.8 <- ( X[3]*(1/v[6]) + aX.9*(1/v[3]) ) / ( (1/v[3]) + (1/v[6]) )
aX.7 <- ( X[4]*(1/v[7]) + aX.8*(1/v[2]) ) / ( (1/v[7]) + (1/v[2]) )

names(aX.9) <- NULL
names(aX.8) <- NULL
names(aX.7) <- NULL

aX.9
aX.8
aX.7

@

A slightly different but equivalent formulation of these calculations is 
presented for the calculations of $X_i$ in Table 1 of \cite{Felsenstein:1985ua}. 
According to this alternative formulation, the ancestral character states for 
nodes 9 and 8 would be calculated as:

<<>>=
aX.9.new <- ( X[1]*v[5] + X[2]*v[4] ) / ( v[4] + v[5] )
aX.8.new <- ( X[3]*v[3] + aX.9*v[6] ) / ( v[3] + v[6] )

names(aX.9.new) <- NULL
names(aX.8.new) <- NULL

aX.9.new
aX.8.new
@


We can also calculate the ancestral character states with the ape function 
ace:

<<>>=
aX <- ace(X, tree.primates, method = "pic", scaled = FALSE)$ace
aX
@

Note that the values for the states at nodes 7-9 are the same as those we 
calculated above. Now, plot the observed values and inferred ancestral 
character states:

<<>>=
plot(tree.primates, label.offset = 0.04)
tiplabels(round(X, 2))
nodelabels( round(aX, 2) )
@

For later convenience, combine all these state values into a single vector:

<<>>=
nX <- c( X, aX )
names( nX ) <- 1:9
nX
@

\subsection{Calculating the contrasts}

From \cite{Felsenstein:1985ua}, the contrast at an internal node is the 
difference in values at the descendent nodes:

<<>>=
contrasts <- c( nX[7]-nX[5], nX[8]-nX[4],  nX[9]-nX[3],  nX[1]-nX[2] )
names(contrasts) <- 6:9
contrasts
@

That's it. The independent contrasts are just a series of subtractions.


Now, compare the values we calculated to what we get with the pic function:

<<>>=
pic.X.ns <- pic(X, tree.primates, scaled = FALSE, var.contrasts = TRUE)
pic.X.ns
@

The values are the same as what we got above.

For most downstream calculations, we want to scale the contrasts to normalize 
the expected differences according to branch lengths. I turned off this 
scaling above so that we could directly compare the pic() results to our own 
results.

The branch length is proportional to the variance. To normalize, we'll divide 
by the standard deviation. The square root of the variance of each contrast 
is the standard deviation for that contrast:

<<>>=
pic.X.ns[,1]/sqrt( pic.X.ns[,2] )
@

These scaled vales are the same as what we get when we have pic() do the 
scaling for us:

<<>>=
pic(X, tree.primates, scaled = TRUE, var.contrasts = TRUE)
@


\section{How this document was made}
This document is a computable data report compiled directly from the data. 
To recreate this file from the data, you will need to install:

\begin{itemize}
  \item R (\url{http://www.r-project.org}). This document was generated with 
  version 2.15.2.
  \item The R package knitr (\url{http://yihui.name/knitr/}), which can be 
  installed from within R. This document was generated with version 0.9.
  \item pdflatex, which comes with LaTeX distributions 
  (\url{http://www.latex-project.org/ftp.html}). This document was generated 
  with version 3.1415926-2.4-1.40.13.
\end{itemize}

From within the knitr directory, launch R and run:

<<eval=FALSE>>=
library(knitr)
knit("independent_contrasts.Rnw")
quit()
@

This will generate a new tex file. To compile this tex file into a pdf 
file, run the following at the shell command line:

<<eval=FALSE, prompt=FALSE>>=
pdflatex independent_contrasts.tex
@

In addition to recreating this document as-is, you can directly edit and add to 
the analyses in the .Rnw source file. You can also copy the R source code from 
the .Rnw file.

\bibliographystyle{amnat}

\bibliography{references}


\end{document}
